{"name": "test_case_01", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6BF463E52+31618]\n\t(No symbol) [0x00007FF6BF3DB0B9]\n\t(No symbol) [0x00007FF6BF29888A]\n\t(No symbol) [0x00007FF6BF2E8524]\n\t(No symbol) [0x00007FF6BF2E862C]\n\t(No symbol) [0x00007FF6BF32F787]\n\t(No symbol) [0x00007FF6BF30D14F]\n\t(No symbol) [0x00007FF6BF32CA80]\n\t(No symbol) [0x00007FF6BF30CEB3]\n\t(No symbol) [0x00007FF6BF2DA46B]\n\t(No symbol) [0x00007FF6BF2DB001]\n\tGetHandleVerifier [0x00007FF6BF76A02D+3202397]\n\tGetHandleVerifier [0x00007FF6BF7B6A4D+3516285]\n\tGetHandleVerifier [0x00007FF6BF7AC4C0+3473904]\n\tGetHandleVerifier [0x00007FF6BF515D56+760454]\n\t(No symbol) [0x00007FF6BF3E6B5F]\n\t(No symbol) [0x00007FF6BF3E1CF4]\n\t(No symbol) [0x00007FF6BF3E1E82]\n\t(No symbol) [0x00007FF6BF3D122F]\n\tBaseThreadInitThunk [0x00007FFDDA891F87+23]\n\tRtlUserThreadStart [0x00007FFDDC68E120+32]", "trace": "self = <test_case_01.Test_case_01 object at 0x000001E81A965370>\n\n    @pytest.mark.usefixtures(\"setup_teardown\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_case_01(self):\n    \n        extend_testing = (By.XPATH,\"\")\n    \n        # reading the data here, from test_case_01.json\n        with open(TEST_DATA_DIR + '/test_case_01.json', 'r') as json_file:\n            test_data = json.load(json_file)\n            customer_unit = test_data['customer_unit']\n    \n        wait = WebDriverWait(self.driver, 30)\n    \n        product_browse  = ProductBrowsing(self.driver)\n    \n        product_browse.product_browsing()\n    \n>       product_browse.adding_products_to_cart()\n\nsrc\\tests\\smoke\\test_case_01.py:34: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsrc\\pages\\product_browsing_page.py:72: in adding_products_to_cart\n    wait.until(expected_conditions.visibility_of_element_located(self.macbook_pro))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a2b187fae3484181a4a369d34914d30c\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x000001E81B622840>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6BF463E52+31618]\nE       \t(No symbol) [0x00007FF6BF3DB0B9]\nE       \t(No symbol) [0x00007FF6BF29888A]\nE       \t(No symbol) [0x00007FF6BF2E8524]\nE       \t(No symbol) [0x00007FF6BF2E862C]\nE       \t(No symbol) [0x00007FF6BF32F787]\nE       \t(No symbol) [0x00007FF6BF30D14F]\nE       \t(No symbol) [0x00007FF6BF32CA80]\nE       \t(No symbol) [0x00007FF6BF30CEB3]\nE       \t(No symbol) [0x00007FF6BF2DA46B]\nE       \t(No symbol) [0x00007FF6BF2DB001]\nE       \tGetHandleVerifier [0x00007FF6BF76A02D+3202397]\nE       \tGetHandleVerifier [0x00007FF6BF7B6A4D+3516285]\nE       \tGetHandleVerifier [0x00007FF6BF7AC4C0+3473904]\nE       \tGetHandleVerifier [0x00007FF6BF515D56+760454]\nE       \t(No symbol) [0x00007FF6BF3E6B5F]\nE       \t(No symbol) [0x00007FF6BF3E1CF4]\nE       \t(No symbol) [0x00007FF6BF3E1E82]\nE       \t(No symbol) [0x00007FF6BF3D122F]\nE       \tBaseThreadInitThunk [0x00007FFDDA891F87+23]\nE       \tRtlUserThreadStart [0x00007FFDDC68E120+32]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:95: TimeoutException"}, "attachments": [{"name": "log", "source": "68eb02c2-217d-4f12-93be-706dfc62d6f6-attachment.txt", "type": "text/plain"}], "start": 1720004559661, "stop": 1720004612279, "uuid": "204d6b9f-bc7d-4c0c-9e2b-9804173278d3", "historyId": "da8a131242ee5a40dd67ae6ebe4a3496", "testCaseId": "da8a131242ee5a40dd67ae6ebe4a3496", "fullName": "src.tests.smoke.test_case_01.Test_case_01#test_case_01", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup_teardown')"}, {"name": "parentSuite", "value": "src.tests.smoke"}, {"name": "suite", "value": "test_case_01"}, {"name": "subSuite", "value": "Test_case_01"}, {"name": "host", "value": "LAPTOP-1QRA8EB8"}, {"name": "thread", "value": "17628-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "src.tests.smoke.test_case_01"}]}